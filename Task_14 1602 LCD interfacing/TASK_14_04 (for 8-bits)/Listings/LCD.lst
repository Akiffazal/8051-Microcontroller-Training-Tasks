C51 COMPILER V9.60.7.0   LCD                                                               09/23/2024 16:25:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD.l
                    -st) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

   1          #include "LCD.h"
   2          
   3          // Delay function to create a short delay
   4          void delay() {
   5   1          int i, j;
   6   1          for(i = 0; i < 100; i++) {
   7   2              for (j = 0; j < 100; j++);
   8   2          }
   9   1      }
  10          
  11          // Define lcd_delay function to create a delay for LCD timing
  12          void lcd_delay() {
  13   1          delay();
  14   1      }
  15          
  16          // Function to send a command to the LCD
  17          void lcd_cmd(unsigned char cmd) {
  18   1          text = cmd;    // Put the command on the data port
  19   1          rs = 0;            // Select command register (RS=0)
  20   1          rw = 0;            // Select write operation (RW=0)
  21   1          en = 1;            // Generate a high-to-low pulse on the enable pin
  22   1          lcd_delay();       // Wait for the command to be processed
  23   1          en = 0;            // End the enable pulse
  24   1      }
  25          
  26          // Function to send data to the LCD
  27          void lcd_data(unsigned char dat) {
  28   1          text = dat;   // Put the data on the data port
  29   1          rs = 1;            // Select data register (RS=1)
  30   1          rw = 0;            // Select write operation (RW=0)
  31   1          en = 1;            // Generate a high-to-low pulse on the enable pin
  32   1          lcd_delay();       // Wait for the data to be processed
  33   1          en = 0;            // End the enable pulse
  34   1      }
  35          
  36          // Function to initialize the LCD
  37          void lcd_init() {
  38   1          lcd_cmd(0x38);     // Set LCD to 8-bit mode, 2 lines, 5x7 matrix
  39   1          lcd_delay();       // Wait for the command to be processed
  40   1          lcd_cmd(0x0C);     // Display ON, cursor OFF
  41   1          lcd_delay();       // Wait for the command to be processed
  42   1          lcd_cmd(0x06);     // Entry mode, auto increment with no shift
  43   1          lcd_delay();       // Wait for the command to be processed
  44   1          lcd_cmd(0x01);     // Clear the display
  45   1          lcd_delay();       // Wait for the command to be processed
  46   1      }
  47          
  48          // Function to set the cursor position
  49          void lcd_set_cursor(unsigned char row, unsigned char col) {
  50   1          unsigned char pos;
  51   1          if (row == 0)
  52   1              pos = 0x80 + col;    // Set cursor position for the first line
  53   1          else if (row == 1)
  54   1              pos = 0xC0 + col;    // Set cursor position for the second line
C51 COMPILER V9.60.7.0   LCD                                                               09/23/2024 16:25:13 PAGE 2   

  55   1          lcd_cmd(pos);            // Send command to set the cursor position
  56   1      }
  57          
  58          // Function to write data at a specific position
  59          void lcd_write(unsigned char row, unsigned char col, unsigned char dat) {
  60   1          lcd_set_cursor(row, col);                  // Set cursor to specified position
  61   1          lcd_data(dat);                             // Write data at that position
  62   1      }
  63          
  64          // Function to clear the display
  65          void lcd_clear() {
  66   1          lcd_cmd(0x01);       // Clear display screen
  67   1          lcd_delay();         // Wait for the command to be processed
  68   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
