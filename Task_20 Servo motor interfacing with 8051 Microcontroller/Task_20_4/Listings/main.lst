C51 COMPILER V9.60.7.0   MAIN                                                              09/16/2024 12:28:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "string.h"
   4          #include "stdio.h"
   5          sbit motor_pin =P2^0;
   6          
   7          sbit k1=P3^1;
   8          sbit k2=P3^0;
   9          unsigned int servo_position=0;
  10          unsigned int on_pulse, off_pulse;
  11          float dutycycle;
  12          unsigned char degree_symbol[8]= {0x06,0x09,0x06, 0x00, 0x00, 0x00, 0x00, 0x00};
  13          
  14          void timerinterrupt () interrupt 1
  15          {
  16   1        motor_pin = ~ motor_pin;
  17   1        if(motor_pin)
  18   1        {
  19   2          TH0= on_pulse >> 8;
  20   2          TL0= on_pulse ;
  21   2        }
  22   1        else
  23   1        {
  24   2          TH0= off_pulse >> 8 ;
  25   2          TL0= off_pulse ;
  26   2        }
  27   1      }
  28          
  29          
  30          
  31          
  32          
  33          void timer_init()
  34          {
  35   1        TMOD=0x01;
  36   1        TH0=0xB7;
  37   1        TL0=0xFD;
  38   1        TR0=1;
  39   1        EA=1;
  40   1        ET0=1;
  41   1        
  42   1      }
  43          
  44          
  45          void set_duty_cycle (float duty_cycle)
  46          {
  47   1        unsigned int period;
  48   1        period = 65535 - 0xB7FD;
  49   1        on_pulse = ((period / 100.0)*duty_cycle);
  50   1        off_pulse = period - on_pulse ;
  51   1        
  52   1        on_pulse = 65535 - on_pulse;
  53   1        off_pulse = 65535- off_pulse;
  54   1        
C51 COMPILER V9.60.7.0   MAIN                                                              09/16/2024 12:28:29 PAGE 2   

  55   1      }
  56          void lcd_disp_num ( unsigned int number, unsigned int width)
  57          {
  58   1        char buffer [8];
  59   1        sprintf (buffer , "%*d", width, number);
  60   1        lcd_string(buffer);
  61   1      }
  62          void lcd_custom_char(unsigned char loc, unsigned char *msg)
  63          {
  64   1        unsigned char i;
  65   1        if(loc<8)
  66   1        {
  67   2          lcd_command(0x40 +(loc*8));
  68   2          for(i=0; i<8; i++)
  69   2          {
  70   3            lcd_char(msg[i]);
  71   3          }
  72   2          lcd_command(0x80);
  73   2        }
  74   1      }
  75          void main ()
  76          {
  77   1        lcd_init ();
  78   1        timer_init();
  79   1        lcd_set_cursor(0,1);
  80   1        lcd_string("Motor Angle");
  81   1        motor_pin=0;
  82   1        while(1)
  83   1        {
  84   2          if(k1 == 0)
  85   2          {
  86   3            delay(200);
  87   3          
  88   3          if(servo_position<180)
  89   3          {
  90   4            servo_position += 45;
  91   4            lcd_set_cursor(2,6);
  92   4            lcd_disp_num(servo_position,3);
  93   4            lcd_custom_char(1, degree_symbol);
  94   4            lcd_set_cursor(2, 9);
  95   4            lcd_char(1);
  96   4            delay(500);
  97   4            
  98   4          }
  99   3          while(k1==0);
 100   3          
 101   3        }
 102   2          if(k2==0)
 103   2          {
 104   3            delay(200);
 105   3            if(servo_position >0)
 106   3            {
 107   4              servo_position -=45;
 108   4              lcd_set_cursor(2,6);
 109   4              lcd_disp_num(servo_position, 3);
 110   4              lcd_custom_char(1, degree_symbol);
 111   4              lcd_set_cursor(2,9);
 112   4              lcd_char(1);
 113   4              delay(500);
 114   4              
 115   4            }
 116   3            while(k2==0);
C51 COMPILER V9.60.7.0   MAIN                                                              09/16/2024 12:28:29 PAGE 3   

 117   3          }
 118   2          dutycycle=((servo_position +45)/180.0)*10;
 119   2          set_duty_cycle(dutycycle);
 120   2          delay(500);
 121   2        }
 122   1      }
 123          
 124          
 125          
 126          
 127          
 128          
 129          
 130          
 131          
 132          //#include <reg52.h>
 133          //#include <intrins.h>
 134          
 135          ///* Define value to be loaded in timer for PWM period of 20 milli second */
 136          //#define PWM_Period 0xB7FE
 137          
 138          //sbit Servo_Motor_Pin = P2^0;
 139          
 140          //unsigned int ON_Period, OFF_Period, DutyCycle;
 141          
 142          ///* Function to provide delay of 1ms at 11.0592 MHz */
 143          //void delay(unsigned int count)
 144          //{
 145          //    int i,j;
 146          //    for(i=0; i<count; i++)
 147          //      for(j=0; j<112; j++);
 148          //}
 149          
 150          //void Timer_init()
 151          //{
 152          //  TMOD = 0x01;    /* Timer0 mode1 */
 153          //  TH0 = (PWM_Period >> 8);/* 20ms timer value */
 154          //  TL0 = PWM_Period;
 155          //  TR0 = 1;    /* Start timer0 */
 156          //}
 157          
 158          ///* Timer0 interrupt service routine (ISR) */
 159          //void Timer0_ISR() interrupt 1 
 160          //{
 161          //  Servo_Motor_Pin = !Servo_Motor_Pin;
 162          //  if(Servo_Motor_Pin)
 163          //  {
 164          //    TH0 = (ON_Period >> 8);
 165          //    TL0 = ON_Period;
 166          //  } 
 167          //  else
 168          //  {
 169          //    TH0 = (OFF_Period >> 8);
 170          //    TL0 = OFF_Period;
 171          //  } 
 172          //      
 173          //}
 174          
 175          ///* Calculate ON & OFF period from duty cycle */
 176          //void Set_DutyCycle_To(float duty_cycle)
 177          //{
 178          //  float period = 65535 - PWM_Period;
C51 COMPILER V9.60.7.0   MAIN                                                              09/16/2024 12:28:29 PAGE 4   

 179          //  ON_Period = ((period/100.0) * duty_cycle);
 180          //  OFF_Period = (period - ON_Period);  
 181          //  ON_Period = 65535 - ON_Period;  
 182          //  OFF_Period = 65535 - OFF_Period;
 183          //}
 184          
 185          //int main()
 186          //{
 187          //   EA  = 1;   /* Enable global interrupt */
 188          //   ET0 = 1;           /* Enable timer0 interrupt */
 189          //   Timer_init();
 190          //   while(1)
 191          //    {
 192          //  Set_DutyCycle_To(2.7);/* 0.54ms(2.7%) of 20ms(100%) period */
 193          //  delay(1000);
 194          //  Set_DutyCycle_To(7);/* 1.4ms(7%) of 20ms(100%) period */
 195          //  delay(1000);
 196          //  Set_DutyCycle_To(12);/* 2.4ms(12%) of 20ms(100%) period */
 197          //  delay(1000);
 198          //    }
 199          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    456    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
