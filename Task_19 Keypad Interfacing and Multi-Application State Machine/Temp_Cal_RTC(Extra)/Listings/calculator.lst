C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/16/2024 10:33:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE CALCULATOR
OBJECT MODULE PLACED IN .\Objects\calculator.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE calculator.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\calculator.lst) TABS(2) OBJECT(.\Objects\calculator.obj)

line level    source

   1          //#include <reg51.h>
   2          //#include "cal.h"
   3          //void del(unsigned int itime);
   4          //void linit();
   5          //int calc (void)
   6          //  {
   7          //   while(1){
   8          ////   unsigned int k=0,m=0,n=0;int k2,k1; char key,key1;unsigned char ch2;
   9          //    unsigned int xdata k = 0, m = 0, n = 0;
  10          //    unsigned int xdata k1, k2;
  11          //    char xdata key, key1;
  12          //    unsigned char xdata ch2;
  13          
  14          //   linit();
  15          //      string("CALCULATOR"); 
  16          //    
  17          //lcdcmd(0xC0);
  18          //key=scan_key();
  19          //k2=get_num(key);
  20          
  21          
  22          
  23          //ch2=scan_key();
  24          //  
  25          
  26          
  27          //key1=scan_key();
  28          //k1=get_num(key1);
  29          
  30          //  
  31          //  string(" = ");  
  32          //     
  33          //switch(ch2)
  34          //{
  35          //case '+':
  36          //disp_num(k1+k2);
  37          //break;
  38          //case '-':
  39          //disp_num(k2-k1);
  40          //break;
  41          //case '*':
  42          //disp_num(k2*k1);
  43          //break;
  44          //case '/':
  45          //disp_num(k2/k1);
  46          //break;
  47          //}
  48          //return 0;
  49          //}
  50          //}
  51          
  52          //void linit(){
  53          // del(15000);
  54          //lcdcmd(0x30);
C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/16/2024 10:33:07 PAGE 2   

  55          //del(4500);
  56          //lcdcmd(0x30);
  57          //del(300);
  58          //lcdcmd(0x30);
  59          //del(600);
  60          //    lcdcmd(0x38);
  61          //    lcdcmd(0x0F);
  62          //    lcdcmd(0x01);
  63          //    lcdcmd(0x06);
  64          //    lcdcmd(0x80);
  65          //}
  66          
  67          
  68          
  69          //void lcdcmd(unsigned char value)
  70          //  {
  71          //    P0 = value;      
  72          //    rs = 0;
  73          //    rw = 0;
  74          //    en = 1;            
  75          //    del(50);
  76          //    en = 0;
  77          //del(50);
  78          //    
  79          //  }
  80          //void lcddata(unsigned char value)
  81          //  {
  82          //   P0 = value;  
  83          //    rs = 1;
  84          //    rw = 0;
  85          //    en = 1;          
  86          //    del(50);
  87          //    en = 0;
  88          //    del(50);
  89          //  }
  90          //void del(unsigned int itime)
  91          //  {
  92          //    unsigned int i, j;
  93          //    for(i=0;i< itime;i++)           
  94          //      for(j=0;j<5;j++);       
  95          //  }
  96          
  97          //char scan_key()
  98          //{
  99          //unsigned char c;
 100          //c='s';
 101          //while(!(c=='0' && c=='1' &&  c=='2' && c=='3' && c=='4' && c=='5' && c=='6' && c=='7' && c=='8'
 102          // && c=='9' && c=='+' && c=='-' && c=='=' && c=='$' && c=='*' && c=='/' ))
 103          //{
 104          //r0=0;r1=1;r2=1;r3=1;
 105          //if(c0==0 && r0==0 ){lcddata('/');del(10000);return c='/';}
 106          //    if(c1==0 && r0==0){ lcddata('*');del(10000);return c= '*';}
 107          //if(c2==0 && r0==0){ lcddata('-');del(10000);return c= '-';}
 108          //if(c3==0 && r0==0){ lcddata('+');del(10000);return c= '+';}
 109          //  
 110          //r0=1;r1=0;r2=1;r3=1;
 111          
 112          //if(c0==0 && r1==0){ lcddata('=');del(10000);return c= '=';}
 113          //    if(c1==0 && r1==0){ lcddata('9');del(10000);return c= '9';}
 114          //if(c2==0 && r1==0){ lcddata('6');del(10000);return c= '6';}
 115          //if(c3==0 && r1==0){ lcddata('3');del(10000);return c= '3';}
 116          
C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/16/2024 10:33:07 PAGE 3   

 117          //r0=1;r1=1;r2=0;r3=1;
 118          
 119          //if(c0==0 && r2==0){ lcddata('0');del(10000);return c= '0';}
 120          //    if(c1==0 && r2==0){ lcddata('8');del(10000);return c= '8';}
 121          //if(c2==0 && r2==0){ lcddata('5');del(10000);return c= '5';}
 122          //if(c3==0 && r2==0){ lcddata('2');del(10000);return c= '2';}
 123          
 124          //r0=1;r1=1;r2=1;r3=0;
 125          
 126          //if(c0==0 && r3==0){ lcddata('*');del(10000);return c= '*';}
 127          //    if(c1==0 && r3==0){ lcddata('7');del(10000);return c= '7';}
 128          //if(c2==0 && r3==0){ lcddata('4');del(10000);return c= '4';}
 129          //if(c3==0 && r3==0){ lcddata('1');del(10000);return c= '1';}
 130          //}
 131          //return 0;
 132          //}
 133          
 134          //int get_num(char ch)         //convert char into int
 135          //{
 136          //switch(ch)
 137          //{
 138          //case '0': return 0; break;
 139          //case '1': return 1; break;
 140          //case '2': return 2; break;
 141          //case '3': return 3; break;
 142          //case '4': return 4; break;
 143          //case '5': return 5; break;
 144          //case '6': return 6; break;
 145          //case '7': return 7; break;
 146          //case '8': return 8; break;
 147          //case '9': return 9; break;
 148          //}
 149          //return 0;
 150          //}
 151          
 152          //void disp_num(float num)            //displays number on LCD
 153          //{
 154          //unsigned char UnitDigit  = 0;  //It will contain unit digit of numb
 155          //unsigned char TenthDigit = 0;  //It will contain 10th position digit of numb
 156          //unsigned char decimal = 0;
 157          //int j;
 158          //int numb;
 159          //j=(int)(num*10);
 160          //numb=(int)num;
 161          //if(numb<0)
 162          //{
 163          //numb = -1*numb;  // Make number positive
 164          //lcddata('-'); // Display a negative sign on LCD
 165          //}
 166          
 167          //TenthDigit = (numb/10);          // Findout Tenth Digit
 168          
 169          //if( TenthDigit != 0)           // If it is zero, then don't display
 170          //lcddata(TenthDigit+0x30);  // Make Char of TenthDigit and then display it on LCD
 171          
 172          //UnitDigit = numb - TenthDigit*10;
 173          
 174          //lcddata(UnitDigit+0x30);   // Make Char of UnitDigit and then display it on LCD
 175          //lcddata('.');
 176          //decimal=(j%10)+0x30;
 177          //lcddata(decimal);
 178          //del(2000000);
C51 COMPILER V9.60.7.0   CALCULATOR                                                        09/16/2024 10:33:07 PAGE 4   

 179          //}
 180          //void  string (char *str)  /* Send string to LCD function */
 181          //{
 182          //  int i;
 183          //  for(i=0;str[i]!=0;i++)  /* Send each char of string till the NULL */
 184          //  {
 185          //    del(10);
 186          
 187          //    lcddata(str[i]);  /* Call LCD data write */
 188          //  }
 189          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
