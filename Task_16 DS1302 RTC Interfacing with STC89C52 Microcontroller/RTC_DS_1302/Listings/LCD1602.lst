C51 COMPILER V9.60.7.0   LCD1602                                                           09/24/2024 13:16:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          sbit LCD_RS = P2^6;
   4          sbit LCD_RW = P2^5;
   5          sbit LCD_EN = P2^7;
   6          
   7          #define LCD_DataPort P0
   8          
   9          /**
  10           * @brief LCD1602????, 12MHz?????1ms
  11           * @param ?
  12           * @retval ?
  13           */
  14           
  15          void LCD_Delay() {
  16   1        unsigned char i, j;
  17   1      
  18   1        i = 2;
  19   1        j = 239;
  20   1      
  21   1        do {
  22   2          while (--j);
  23   2        } while (--i);
  24   1      }
  25          
  26          
  27          void LCD_WriteCommand(unsigned char Command) {
  28   1        LCD_RS = 0;
  29   1        LCD_RW = 0;
  30   1        LCD_DataPort = Command;
  31   1        LCD_EN = 1;
  32   1        LCD_Delay();
  33   1        LCD_EN = 0;
  34   1        LCD_Delay();
  35   1      }
  36          
  37          void LCD_WriteData(unsigned char Data) 
  38            {
  39   1          LCD_RS = 1;
  40   1          LCD_RW = 0;
  41   1          LCD_DataPort = Data;
  42   1          LCD_EN = 1;
  43   1          LCD_Delay();
  44   1          LCD_EN = 0;
  45   1          LCD_Delay();
  46   1        }
  47          
  48          
  49          
  50          void LCD_SetCursor(unsigned char Line, unsigned char Column) 
  51            {
  52   1          if (Line == 1) 
  53   1            {
  54   2              LCD_WriteCommand(0x80 | (Column - 1));
C51 COMPILER V9.60.7.0   LCD1602                                                           09/24/2024 13:16:21 PAGE 2   

  55   2            } 
  56   1          else if (Line == 2) 
  57   1            {
  58   2              LCD_WriteCommand(0x80 + (Column - 1 + 0x40));
  59   2            }
  60   1        }
  61          
  62          void LCD_Init() {
  63   1        LCD_WriteCommand(0x38); 
  64   1        LCD_WriteCommand(0x0c); 
  65   1        LCD_WriteCommand(0x06); 
  66   1        LCD_WriteCommand(0x01); 
  67   1      }
  68          
  69          
  70          void LCD_ShowChar(unsigned char Line, unsigned char Column, char Char) 
  71            {
  72   1          LCD_SetCursor(Line, Column);
  73   1          LCD_WriteData(Char);
  74   1        }
  75          
  76            
  77          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String) 
  78            {
  79   1          unsigned char i;
  80   1          LCD_SetCursor(Line, Column);
  81   1          for (i = 0; String[i] != '\0'; i++) 
  82   1          {
  83   2            LCD_WriteData(String[i]);
  84   2          }
  85   1        }
  86          
  87            
  88          int LCD_Pow(int X, int Y) 
  89            {
  90   1          unsigned char i;
  91   1          int Result = 1;
  92   1          for (i = 0; i < Y; i++) 
  93   1          {
  94   2            Result *= X;
  95   2          }
  96   1          return Result;
  97   1        }
  98            
  99          
 100          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length) 
 101            {
 102   1          unsigned char i;
 103   1          LCD_SetCursor(Line, Column);
 104   1          for (i = Length; i > 0; i--) 
 105   1          {
 106   2            LCD_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
 107   2          }
 108   1        } 
 109            
 110          
 111          
 112          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length
             -)
 113          {
 114   1        unsigned char i;
 115   1        unsigned int Number1;
C51 COMPILER V9.60.7.0   LCD1602                                                           09/24/2024 13:16:21 PAGE 3   

 116   1        LCD_SetCursor(Line, Column);
 117   1        if(Number>=0)
 118   1        {
 119   2          LCD_WriteData('+');
 120   2          Number1=Number;
 121   2        }
 122   1        else
 123   1        {
 124   2          LCD_WriteData('-');
 125   2          Number1 = -Number;    
 126   2        }
 127   1        for(i=Length; i>0; i--)
 128   1        {
 129   2          LCD_WriteData(Number/LCD_Pow(10, i-1)%10+'0');
 130   2        }
 131   1      }
 132          
 133          
 134          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 135          {
 136   1          unsigned char i, SingleNumber;
 137   1          LCD_SetCursor(Line, Column);
 138   1          for(i=Length; i>0; i--)
 139   1          {
 140   2              SingleNumber = Number / LCD_Pow(16, i-1) % 16;
 141   2              if(SingleNumber < 10)
 142   2              {
 143   3                  LCD_WriteData(SingleNumber + '0');
 144   3              }
 145   2              else
 146   2              {
 147   3                  LCD_WriteData(SingleNumber - 10 + 'A');
 148   3              }
 149   2          }
 150   1      }
 151          
 152          
 153          
 154          void ShowBinNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length) 
 155            {
 156   1            unsigned char i;
 157   1            LCD_SetCursor(Line, Column);
 158   1            for (i = Length; i > 0; i--) 
 159   1            {
 160   2              LCD_WriteData((Number / LCD_Pow(2, i - 1) % 2) + '0');
 161   2            }
 162   1        }
 163          
 164          
 165          
 166          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   LCD1602                                                           09/24/2024 13:16:21 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
